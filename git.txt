@author : Satwik Ram K

1. create a github repositary

QUICK SETUP

1. clone the github account to the project

git config --global user.name "Satwik Ram"

2. enter the github email 

git config --global user.email "satwikram29@gmail.com"

3. set up a local repositary and add all the files

   Once, all the files are added to the local repositary it must be pushed

   git init (initialize the empty git repositary (contains git ignore))

   gitignore - for ignroing the files that are confidential 

   change the projectname in project files and directories

4. git status  ( for obtaining the status of the files) 

5. git add . (adds all the files, here . indicates everything)

6. git commit -m "First commit, improvements needed" (commiting with comments)

7. git log (for checking the logs i.e time and date of the last commit)

8. push this local repo into github

local repo will be known as the origin

git remote add origin https://github.com/nick-name/reop.git (https link will be in git repo)

9. commit

git push -u origin master

10. If any changes are done, repeat from step 5

11. git checkout -- <file name> (If the files are delted and to recover it)

For Large Files
12. git lfs track ".file_extennsion"

13. git add .gitattributes

14. Creating a Git Branch

git branch branch_name # Creates a branch

15. git branch --list

16. Switching to Branch

git checkout branch_name

17. Pushing the branch

git push --set-upstream origin branch_name

18. Updating Local Repository

git pull 
git pull origin master
git fetch

19. Unrelated Merge
git merge dev --allow-unrelated-histories

20
git branch main dev -f 

21
Merge Unrelated Histories
git checkout a (you will switch to branch a)
git merge b (this will merge all changes from branch b into branch a)
git commit -a (this will commit your changes)

git pull origin branchname --allow-unrelated-histories

22 Delete a branch

git branch -d <branch name>

git remote set-url origin <url>

23 Change all the past commits user name and email to current email and user.
git rebase --root --exec "git commit --amend --no-edit --date 'now' --reset-author"
